<!--
[variables]
{
  $page_title = "The score Command"
  $page_title_english = "The score Command"
  $file_prev = "010.html"
  $file_next = "012.html"
  $real_page_number = "11"
  $page_number = "11"
}
-->

<_header1>
$page_title
</_header1>

<_header2>
Usage
</_header2>

<_pg>
The score command is initiated with the following call:
</_pg>

<_code>
covered score -t &lt;top_module&gt; [&lt;options&gt;]
</_code>

<_pg>
The <i>top_module</i> parameter is required for the scoring purposes and represents the 
top-most module that will be covered.  Covered is limited to being able to gain coverage 
results for either a single module or a single module tree.  With the combination of the
-t, -i and -e options, all relevant modules in a design can be selected for coverage.  The 
following figure shows a design in its hierachical form to illustrate how to get Covered 
to generate coverage results for a part of the design.
</_pg>

<_margin>Figure</_margin>

<_pg>
<img src="img/vhier.png">
</_pg>

<_pg>
Assume that the following Verilog modules are used to create this tree.
</_pg>

<_pg>
<ul>
  <li>module "test" instantiated as "test" in the above figure</li>
  <li>module "foomod" instantiated as "foo"</li>
  <li>module "barmod" instantiated as "bar"</li>
  <li>module "amod" instantiated as "a"</li>
  <li>module "bmod" instantiated as "b"</li>
</ul>
</_pg>

<_pg>
To get coverage for the entire design, the covered command line would be:
</_pg>

<_margin>Command</_margin>

<_code>
covered score -t test -i test (rest of command-line)
</_code>

<_pg>
Because both the -t and -i options are the same value (the module name is the same as the
instance name), only the -t option needs to be specified.  If the -i option is not specified,
Covered will assume that the instance name of the top module is the same name as the top
module itself.  Note that the -t option always needs to be specified for the score command.
</_pg>

<_pg>
To get coverage for the instance foo and all modules below it, the covered command line
would be:
</_pg>

<_margin>Command</_margin>

<_code>
covered score -t foomod -i test.foo (rest of command-line)
</_code>

<_pg>
In this case, we do not wish to score the module test (the top-level file for the design)
but rather wish to gain coverage information for module foomod and all instantiated modules
underneath it.  Since foomod is not the top-level design file, the -i option must be specified
to tell Covered what the hierarchical scope of the top-level score file is in relation to the
entire design.  The main reason why this is necessary is so that Covered will be able to
locate the dumpfile information for the modules/instances that need to be scored.
</_pg>

<_pg>
To get coverage for only the instance foo (and none of the modules instantiated below it
in the hierarchy), Covered command-line would look like the following:
</_pg>

<_margin>Command</_margin>

<_code>
covered score -t foomod -i test.foo -e amod -e bmod
</_code>

<_pg>
Here we see the use of the -e option, it takes a module name as its value.  When a module
with the matching name is found in the hierarchy, it and all of its submodules are removed
from coverage.  You may specify as many -e arguments as necessary to select the appropriate
modules to cover.
</_pg>

<_pg>
To get coverage for the instance foo and all modules below it,
in addition to the instance bar, you would have to run
Covered twice (once for each top instance).
</_pg>

<_pg>
The -vcd &lt;<i>vcd_dumpfile</i>&gt; parameter is simply the
name of the VCD dumpfile that contains all of the module instances
selected by the -t parameter (in combination with the -e option --
see below).
</_pg>

<_header2>
Options
</_header2>

<_pg>
The following table describes the additional options that can
be passed to the score command.  Note that it is optional in
how you tell Covered where to find the Verilog design files;
however, it is not optional to exclude the Verilog files.  If
no Verilog can be found that contains at least the top instance,
Covered will generate an error message to the user specifying
that it was unable to find the required Verilog modules.
</_pg>

<_block>
<table cellspacing=2 cellpadding=4 border=1>
  <tr>
    <td colspan=2 class="tableHeader">
      Options to score Command
    </td>
  </tr>
  <tr>
    <td>
      <strong>Option</strong>
    </td>
    <td>
      <strong>Description</strong>
    <td>
  </tr>
  <tr>
    <td>
      -vcd &lt;dumpfile&gt;
    </td>
    <td>
      Name of dumpfile to score design with.  If this option is not used, Covered will 
      only create an initial CDD file from the design and will not attempt to score the 
      design.
    </td>
  </tr>
  <tr>
    <td>
      -i &lt;instance&gt;
    </td>
    <td>
      Instance name of top-level module.  Necessary if 
      module to verify coverage is not the top-level 
      module in the design.  If not specified, -t value 
      is used.
    </td>
  </tr>
  <tr>
    <td>
      -o &lt;<i>filename</i>&gt;
    </td>
    <td>
      Name of CDD to write coverage information to
    </td>
  </tr>
  <tr>
    <td>
      -I &lt;<i>directory</i>&gt;
    </td>
    <td>
      Directory to find included Verilog files.  You may use this
option as many times as necessary on the command-line, one for each
directory.
    </td>
  </tr>
  <tr>
    <td>
      -f &lt;<i>filename</i>&gt;
    </td>
    <td>
      Name of file containing additional arguments to parse.  You
may specify this option more than once on a command-line.
    </td>
  </tr>
  <tr>
    <td>
      -y &lt;<i>directory</i>&gt;
    </td>
    <td>
      Directory to find unspecified Verilog files.  You may specify
this option more than once on a command-line; one for each directory
required.
    </td>
  </tr>
  <tr>
    <td>
      -v &lt;<i>filename</i>&gt;
    </td>
    <td>
      Name of specific Verilog file to score.  You may specify this
option more than once on a command-line; one for each filename to
parse.
    </td>
  </tr>
  <tr>
    <td>
      -e &lt;<i>module</i>&gt;
    </td>
    <td>
      Name of module to not score.  You may specify this option more
than once on a command-line; one for each module to remove from
coverage.
    </td>
  </tr>
  <tr>
    <td>
      -D &lt;name&gt;(=&lt;value&gt;)
    </td>
    <td>
      Defines the specified name to 1 or the specified value.
    </td>
  </tr>
  <tr>
    <td>
      -P &lt;parameter_scope&gt;=&lt;value&gt;
    </td>
    <td>
      Performs a defparam on the specified parameter with value.
    </td>
  </tr>
  <tr>
    <td>
      -T min|typ|max
    </td>
    <td>
      Specifies which value to use in min:typ:max delay expressions.  Default is typ.
    </td>
  </tr>
  <tr>
    <td>
      -h
    </td>
    <td>
      Outputs usage information for the score command
    </td>
  </tr>
</table>
</_block>
