<!--
[variables]
{
  $page_title = "Using Covered"
  $page_title_english = "Using Covered"
  $file_prev = "009.html"
  $file_next = "011.html"
  $real_page_number = "10"
  $page_number = "10"
}
-->

<_header1>
$page_title
</_header1>

<_header2>
Work Flow
</_header2>

<_pg>
Covered has three basic commands that it uses for gaining coverage
information about a design and displaying that information to
the user.
</_pg>

<_pg>
<UL>
 <LI> score
 <LI> merge
 <LI> report
</UL>
</_pg>

<_header3>
Scoring the Design
</_header3>

<_pg>
To begin using Covered, you will need to create a special database
file called a coverage description database (CDD).  Covered 
uses this file to store coverage-specific information about the
DUT.  This file is a text-based file that is written in a
specific format (the format of this file is not discussed in
this document but can be found in the developer's document) that
Covered understands.
</_pg>

<_pg>
To create the CDD and populate it with the simulation dumpfile
results, you must use the score (see $link_to_page_the_score_command
for details) command.  This command parses in the DUT files
and generates an initial CDD for the design.  This CDD does not
contain any coverage details but only the design elements that
Covered needs to gain coverage results.
</_pg>

<_pg>
Once the initial CDD has been created, the score command reads
in the specified VCD dumpfile from the given DUT.  If Covered
recognizes that the VCD dumpfile does not correspond to the
DUT that it parses (dumpfile was not generated from the DUT
specified), an error message is supplied to the user telling
them this.  Once the dumpfile has been parsed, Covered generates
a new version of the CDD containing a populated database.  This
CDD may be merged with another CDD from the same DUT and/or
reports may be generated from this CDD.
</_pg>

<_header3>
Merging CDDs
</_header3>

<_pg>
When two or more CDDs have been generated from the same DUT.  It
is often desirable to merge their contents to see what the total
coverage is for both simulation runs.  The reasons why merging
is desirable is that often several tests are written to exercise
the entire design (not just one).  This makes tests easier to
write and maintain.  Since, typically, only one test is run
per simulation run and that test does not fully test the DUT,
it is necessary to combine the results of the multiple simulations
to the see the combined effect of the tests on the design.
This is where merging comes into play.
</_pg>

<_pg>
Merging multiple CDDs from the same design is easy with Covered,
and is accomplished with the merge (see $link_to_page_the_merge_command
for details) command.  This command reads in two CDDs, merges
their results and outputs the merged CDD to a different file
or replaces one of the two CDDs with the results of the merge.
</_pg>

<_header3>
Creating Coverage Reports
</_header3>

<_pg>
After a CDD is created or merged, the contents of the CDD
can be extracted and transformed into human readable coverage
reports with the report (see $link_to_page_the_report_command
for details) command.  A summary report containing the percentage
of metrics covered is generated for each module.  Additionally,
to aid in understanding what and why something was not covered,
a verbose reporting mechanism exists.  Verbose reporting will
explicitly point to and describe why something was not fully
covered for a specific metric.
</_pg>

<_pg>
Reports are text-based output that by default are directed
toward standard output but may, with the use of an option flag,
be output to a specific file for storage purposes.
</_pg>

<_header2>
Covered options
</_header2>

<_pg>
The following table describes options that Covered will accept
apart from its normal commands which are described in the next
several chapters.
</_pg>

<_block>
<table cellspacing=2 cellpadding=4 border=1>
  <tr>
    <td colspan=2 class="tableHeader">
      Options to Covered
    </td>
  </tr>
  <tr>
    <td>
      <strong>Option</strong>
    </td>
    <td>
      <strong>Description</strong>
    <td>
  </tr>
  <tr>
    <td>
      -h
    </td>
    <td>
      Generates usage output to standard output
    </td>
  </tr>
  <tr>
    <td>
      -v
    </td>
    <td>
      Outputs current version of Covered
    </td>
  </tr>
</table>
</_block>
