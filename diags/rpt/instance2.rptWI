Covered -- Verilog Coverage Verbose Report
==========================================

LINE COVERAGE RESULTS BY INSTANCE
---------------------------------
Instance                                           Hit/ Miss/Total    Percent hit
---------------------------------------------------------------------------------
  main                                               1/    0/    1      100%
  main.add                                           0/    0/    0      100%
  main.add.bit0                                      2/    0/    2      100%
  main.add.bit1                                      2/    0/    2      100%
  main.add.bit2                                      2/    0/    2      100%
  main.add.bit3                                      2/    0/    2      100%
=================================================================================

TOGGLE COVERAGE RESULTS BY INSTANCE
-----------------------------------
Instance                                                   Toggle 0 -> 1                       Toggle 1 -> 0
                                                   Hit/ Miss/Total    Percent hit      Hit/ Miss/Total    Percent hit
---------------------------------------------------------------------------------------------------------------------
  main                                               9/    9/   18       50%             8/   10/   18       44%
  main.add                                           6/   10/   16       38%             5/   11/   16       31%
  main.add.bit0                                      0/    4/    4        0%             2/    2/    4       50%
  main.add.bit1                                      0/    4/    4        0%             0/    4/    4        0%
  main.add.bit2                                      2/    2/    4       50%             2/    2/    4       50%
  main.add.bit3                                      4/    0/    4      100%             1/    3/    4       25%

Module: main, File: instance2.v, Instance: main
--------------------------------------------------------
Signals not getting 100% toggle coverage

Signal                    Toggle
----------------------------------------------------------------------------------
a                         0->1: 4'h8
......................... 1->0: 4'h0 ...
b                         0->1: 4'hc
......................... 1->0: 4'h5 ...
z                         0->1: 4'hc
......................... 1->0: 4'hd ...
carry                     0->1: 1'h1
......................... 1->0: 1'h0 ...
result                    0->1: 5'h1c
......................... 1->0: 5'h0d ...

Module: adder4, File: ./lib/adder4.v, Instance: main.add
--------------------------------------------------------
Signals not getting 100% toggle coverage

Signal                    Toggle
----------------------------------------------------------------------------------
a                         0->1: 4'h8
......................... 1->0: 4'h0 ...
b                         0->1: 4'hc
......................... 1->0: 4'h5 ...
c                         0->1: 1'h1
......................... 1->0: 1'h0 ...
z                         0->1: 4'hc
......................... 1->0: 4'hd ...
c2                        0->1: 1'h0
......................... 1->0: 1'h0 ...
c1                        0->1: 1'h0
......................... 1->0: 1'h0 ...
c0                        0->1: 1'h0
......................... 1->0: 1'h0 ...

Module: adder1, File: ./lib/adder1.v, Instance: main.add.bit0
--------------------------------------------------------
Signals not getting 100% toggle coverage

Signal                    Toggle
----------------------------------------------------------------------------------
a                         0->1: 1'h0
......................... 1->0: 1'h0 ...
b                         0->1: 1'h0
......................... 1->0: 1'h1 ...
c                         0->1: 1'h0
......................... 1->0: 1'h0 ...
z                         0->1: 1'h0
......................... 1->0: 1'h1 ...

Module: adder1, File: ./lib/adder1.v, Instance: main.add.bit1
--------------------------------------------------------
Signals not getting 100% toggle coverage

Signal                    Toggle
----------------------------------------------------------------------------------
a                         0->1: 1'h0
......................... 1->0: 1'h0 ...
b                         0->1: 1'h0
......................... 1->0: 1'h0 ...
c                         0->1: 1'h0
......................... 1->0: 1'h0 ...
z                         0->1: 1'h0
......................... 1->0: 1'h0 ...

Module: adder1, File: ./lib/adder1.v, Instance: main.add.bit2
--------------------------------------------------------
Signals not getting 100% toggle coverage

Signal                    Toggle
----------------------------------------------------------------------------------
a                         0->1: 1'h0
......................... 1->0: 1'h0 ...
c                         0->1: 1'h0
......................... 1->0: 1'h0 ...

Module: adder1, File: ./lib/adder1.v, Instance: main.add.bit3
--------------------------------------------------------
Signals not getting 100% toggle coverage

Signal                    Toggle
----------------------------------------------------------------------------------
a                         0->1: 1'h1
......................... 1->0: 1'h0 ...
b                         0->1: 1'h1
......................... 1->0: 1'h0 ...
c                         0->1: 1'h1
......................... 1->0: 1'h0 ...
===============================================================================================================

COMBINATIONAL LOGIC COVERAGE RESULTS BY INSTANCE
------------------------------------------------
Instance                                               Logic Combinations
                                                  Hit/Miss/Total    Percent hit
-------------------------------------------------------------------------------
  main                                              1/   1/   2       50%
  main.add                                          0/   0/   0      100%
  main.add.bit0                                     4/   4/   8       50%
  main.add.bit1                                     2/   6/   8       25%
  main.add.bit2                                     4/   4/   8       50%
  main.add.bit3                                     6/   2/   8       75%

Module: main, File: instance2.v, Instance: main
--------------------------------------------------------
Missed Combinations
====================================================
 Line #     Expression
====================================================
      9:    assign result = {carry,  z }
                            |----1-----|


Expression 1   (1/2)
^^^^^^^^^^^^^ - {}
 E | E
=0=|=1=
 *    



Module: adder1, File: ./lib/adder1.v, Instance: main.add.bit0
--------------------------------------------------------
Missed Combinations
====================================================
 Line #     Expression
====================================================
     15:    assign  z  = ( a  ^  b )
                         |----1----|


Expression 1   (2/4)
^^^^^^^^^^^^^ - ^
 LR | LR | LR | LR 
=00=|=01=|=10=|=11=
           *    *

====================================================
 Line #     Expression
====================================================
     16:    assign  c  = ( a  &  b )
                         |----1----|


Expression 1   (2/4)
^^^^^^^^^^^^^ - &
 LR | LR | LR | LR 
=00=|=01=|=10=|=11=
           *    *



Module: adder1, File: ./lib/adder1.v, Instance: main.add.bit1
--------------------------------------------------------
Missed Combinations
====================================================
 Line #     Expression
====================================================
     15:    assign  z  = ( a  ^  b )
                         |----1----|


Expression 1   (1/4)
^^^^^^^^^^^^^ - ^
 LR | LR | LR | LR 
=00=|=01=|=10=|=11=
      *    *    *

====================================================
 Line #     Expression
====================================================
     16:    assign  c  = ( a  &  b )
                         |----1----|


Expression 1   (1/4)
^^^^^^^^^^^^^ - &
 LR | LR | LR | LR 
=00=|=01=|=10=|=11=
      *    *    *



Module: adder1, File: ./lib/adder1.v, Instance: main.add.bit2
--------------------------------------------------------
Missed Combinations
====================================================
 Line #     Expression
====================================================
     15:    assign  z  = ( a  ^  b )
                         |----1----|


Expression 1   (2/4)
^^^^^^^^^^^^^ - ^
 LR | LR | LR | LR 
=00=|=01=|=10=|=11=
           *    *

====================================================
 Line #     Expression
====================================================
     16:    assign  c  = ( a  &  b )
                         |----1----|


Expression 1   (2/4)
^^^^^^^^^^^^^ - &
 LR | LR | LR | LR 
=00=|=01=|=10=|=11=
           *    *



Module: adder1, File: ./lib/adder1.v, Instance: main.add.bit3
--------------------------------------------------------
Missed Combinations
====================================================
 Line #     Expression
====================================================
     15:    assign  z  = ( a  ^  b )
                         |----1----|


Expression 1   (3/4)
^^^^^^^^^^^^^ - ^
 LR | LR | LR | LR 
=00=|=01=|=10=|=11=
      *          

====================================================
 Line #     Expression
====================================================
     16:    assign  c  = ( a  &  b )
                         |----1----|


Expression 1   (3/4)
^^^^^^^^^^^^^ - &
 LR | LR | LR | LR 
=00=|=01=|=10=|=11=
      *          


=================================================================================

FINITE STATE MACHINE COVERAGE RESULTS BY INSTANCE
-------------------------------------------------
                                                               State                             Arc
Instance                                          Hit/Miss/Total    Percent hit    Hit/Miss/Total    Percent hit
----------------------------------------------------------------------------------------------------------------
  main                                              0/   0/   0      100%            0/   0/   0      100%
  main.add                                          0/   0/   0      100%            0/   0/   0      100%
  main.add.bit0                                     0/   0/   0      100%            0/   0/   0      100%
  main.add.bit1                                     0/   0/   0      100%            0/   0/   0      100%
  main.add.bit2                                     0/   0/   0      100%            0/   0/   0      100%
  main.add.bit3                                     0/   0/   0      100%            0/   0/   0      100%
=================================================================================

