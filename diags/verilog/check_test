#!/usr/bin/perl

# Name:    check_test
# Author:  Trevor Williams  <trevorw(charter.net)>
# Date:    12/28/2002
# Purpose: Verifies that specified diagnostic successfully passed all phases of testing.
# Note:    mode 0:  Normally run diagnostic error check (checks report and CDD files)
#          mode 1:  Error diagnostic (checks output against *.err files)
#          mode 2:  Skipped diagnostic (no check but increment PASSED count)
#          mode 3:  Finish run (removes all *.done files if FAILED count == 0)
#          mode 4:  Finish run but leave *.done files
#          mode 5:  Run report file diagnostic error check (for use with LXT/VPI dump verification)

$test   = $ARGV[0];
$rm_cdd = $ARGV[1];
$mode   = $ARGV[2];

# Defines
$CDD_DIR     = "../cdd";
$RPT_DIR     = "../rpt";
$ERR_DIR     = "../err";
$RPT_OUTPUT  = "regress.output";
$FAIL_OUTPUT = "regress.failed";

# Open report results file if it currently exists and accumulate info.
if( open( RPT_RESULTS, "${RPT_OUTPUT}" ) > 0 ) {

  $results = <RPT_RESULTS>;
  chomp( $results );

  if( $results =~ /^DIAGNOSTICS PASSED: (\d+), FAILED: (\d+)$/ ) {
    $passed = $1;
    $failed = $2;
  } else {
    die "Bad format for regression results file\n";
  }

  close( RPT_RESULTS );

} else {

  $passed = 0;
  $failed = 0;

}

# If this is the finish mode, remove all *.done files if failed count shows no failures
if( ($mode == 3) || ($mode == 4) ) {

  system( "echo; cat $RPT_OUTPUT; echo; rm -rf $RPT_OUTPUT" ) && die;

  if( ($failed == 0) && ($mode == 3) ) {
    system( "rm -rf *.done $FAIL_OUTPUT" ) && die;
  }

} else {

  # If this is not an error test, check the CDD and report files */
  if( ($mode == 0) || ($mode == 5) ) {

    if( $mode == 0 ) {

      # Check CDD file
      if( -e "${test}.cdd" ) {
        $check1 = system( "./cdd_diff ${test}.cdd ${CDD_DIR}/${test}.cdd" );
        if( ($check1 == 0) && ($rm_cdd == 1) ) {
          system( "rm ${test}.cdd" ) && die;
        }
      } else {
        $check1 = 1;
      }

    }

    # Check module report
    $check2 = system( "diff ${test}.rptM ${RPT_DIR}/${test}.rptM" );
    if( $check2 == 0 ) {
      system( "rm ${test}.rptM" ) && die;
    }

    # Check instance report
    $check3 = system( "diff ${test}.rptI ${RPT_DIR}/${test}.rptI" );
    if( $check3 == 0 ) {
      system( "rm ${test}.rptI" ) && die;
    }

    # Check module with line-width report
    $check4 = system( "diff ${test}.rptWM ${RPT_DIR}/${test}.rptWM" );
    if( $check4 == 0 ) {
      system( "rm ${test}.rptWM" ) && die;
    }

    # Check instance with line-width report
    $check5 = system( "diff ${test}.rptWI ${RPT_DIR}/${test}.rptWI" );
    if( $check5 == 0 ) {
      system( "rm ${test}.rptWI" ) && die;
    }

  # If this is an error test, check the error file
  } elsif( $mode == 1 ) {
  
    $check1 = system( "diff ${test}.err ${ERR_DIR}/${test}.err" );
    if( $check1 == 0 ) {
      system( "rm ${test}.err" ) && die;
    }

  }

  open( RPT_RESULTS, ">${RPT_OUTPUT}" ) || die "Can't open ${RPT_OUTPUT} for writing!\n";
  open( RPT_FAILED, ">>${FAIL_OUTPUT}" ) || die "Can't open ${FAIL_OUTPUT} for writing!\n";

  if( (($mode == 0) && (($check1 > 0) || ($check2 > 0) || ($check3 > 0) || ($check4 > 0) || ($check5 > 0))) ||
      (($mode == 1) && ($check1 > 0)) ||
      (($mode == 5) && (($check2 > 0) || ($check3 > 0) || ($check4 > 0) || ($check5 > 0))) ) {
    print "  Checking output results         -- FAILED\n";
    print RPT_FAILED "${test}\n";
    $failed++;
  } else {
    if( ($mode == 0) || ($mode == 1) || ($mode == 5) ) {
      print "  Checking output results         -- PASSED\n";
    }
    $passed++;

    # Remove VCD file
    system( "rm -f *.vcd" ) && die;
 
    # Create the done file
    system( "touch ${test}.done" ) && die;

  }

  print RPT_RESULTS "DIAGNOSTICS PASSED: ${passed}, FAILED: ${failed}\n";

  close( RPT_RESULTS );
  close( RPT_FAILED  );

}
