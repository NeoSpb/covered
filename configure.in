dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/main.c)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(covered,covered-20061020)

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CC
dnl AC_ARG_PROGRAM
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_CHECK_PROGS(XGPERF,gperf,none)
if test "$XGPERF" = "none"
then
	echo "*** Error:  No suitable gperf found. ***"
	echo "    Please install the 'gperf' package."
	exit 1
fi

dnl Libraries
AC_CHECK_LIB(z,gzdopen)

## Tcl/Tk.
AC_ARG_WITH([tcltk],
[AC_HELP_STRING([--with-tcltk],
                [use Tcl/Tk, or specify its library dir @<:@yes@:>@])],
[if test "${withval}" = no; then
  want_tcltk=no
elif test "${withval}" = yes; then
  want_tcltk=yes
else
  want_tcltk=yes
  LDFLAGS="${LDFLAGS} -L${withval}"
  tcltk_prefix="${withval}"
fi],
[want_tcltk=yes])
AC_ARG_WITH([tcl-config],
[AC_HELP_STRING([--with-tcl-config=TCL_CONFIG],
                [specify location of tclConfig.sh @<:@@:>@])],
[TCL_CONFIG="${withval}"],
[TCL_CONFIG=""])
AC_ARG_WITH([tk-config],
[AC_HELP_STRING([--with-tk-config=TK_CONFIG],
                [specify location of tkConfig.sh @<:@@:>@])],
[TK_CONFIG="${withval}"],
[TK_CONFIG=""])

AC_ARG_VAR([TCLTK_LIBS],
           [flags needed for linking against the Tcl and Tk libraries])
AC_ARG_VAR([TCLTK_CPPFLAGS],
           [flags needed for finding the tcl.h and tk.h headers])

## Tcl/Tk.
COVERED_TCLTK

## Check for browser for help pages
COVERED_PROG_BROWSER

dnl Specify debug enabling
COVERED_DEBUG

## Simulators supported
AC_ARG_WITH([iv],
[AC_HELP_STRING([--with-iv=IV_INCLUDE_DIR],
                [Create covered.vpi module for the Icarus Verilog simulator with the specified include directory @<:@@:>@])],
[if test "${withval}" = no; then
  want_iv=no
elif test "${withval}" = yes; then
  want_iv=yes
else
  want_iv=yes
  iv_prefix="${withval}"
fi],
[want_iv=no])
if test "$want_iv" = yes; then
  AC_SUBST([IVLIB], ['covered.vpi${EXEEXT}'])
fi

AC_ARG_WITH([vcs],
[AC_HELP_STRING([--with-vcs=VCS_INCLUDE_DIR],
                [Create covered.vcs.so file for the VCS simulator with the specified include directory @<:@@:>@])],
[if test "${withval}" = no; then
  want_vcs=no
elif test "${withval}" = yes; then
  want_vcs=yes
else
  want_vcs=yes
  vcs_prefix="${withval}"
fi],
[want_vcs=no])
if test "$want_vcs" = yes; then
  AC_SUBST([VCSLIB], ['covered.vcs.so${EXEEXT}'])
  AC_SUBST([VCSINC], ["${vcs_prefix}"])
fi

AC_ARG_WITH([cver],
[AC_HELP_STRING([--with-cver=CVER_INCLUDE_DIR],
                [Create covered.cver.so file for the CVER simulator with the specified include directory @<:@@:>@])],
[if test "${withval}" = no; then
  want_cver=no
elif test "${withval}" = yes; then
  want_cver=yes
else
  want_cver=yes
  cver_prefix="${withval}"
fi],
[want_cver=no])
if test "$want_cver" = yes; then
  AC_SUBST([CVERLIB], ['covered.cver.so${EXEEXT}'])
  AC_SUBST([CVERINC], ["${cver_prefix}"])
fi

dnl AC_CHECK_HEADERS(getopt.h)
AC_CHECK_HEADERS(string.h)
AC_CHECK_HEADERS(sys/times.h)

dnl Checks for libraries.
dnl AM_WITH_MPATROL(yes)

dnl Checks for header files.
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_CHECK_SIZEOF(short,4)
AC_CHECK_SIZEOF(int,4)
AC_CHECK_SIZEOF(long,4)

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_TYPE_SIZE_T

AC_OUTPUT(Makefile src/Makefile lib/Makefile scripts/Makefile doc/Makefile doc/user/Makefile doc/gui/Makefile)

if test -n "${warn_tcltk_version}"; then
  AC_MSG_WARN([${warn_tcltk_version}])
fi
