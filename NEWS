Covered-Related NEWS
====================
    * 01/28/2003

Release covered-0.2pre2 made.  Bug fixes and enhancements for allowing more Verilog
code to be parsed without spewing parsing errors.  The list of open bugs is empty at
the moment.  I will be working on enhancing the user documents and development
documents in preparation for the stable release.  The stable release will be made
next unless there are new bugs found for which the bug fixes convince me that additional
testing is necessary.  The following is a list of the changes for this release.

  - Fixed bug with copying instance trees for instances of modules that were previously
    parsed and built into the main instance tree.
  - Fixing bug in file finder so that only missing modules are displayed after the
    parsing phase is completed.
  - Updated output of filenames as they are parsed to give more consistent look.
  - Fixing bug with leftover tmp* file when missing module error is reported.
  - Adding parsing support for pullup, pulldown and gate types though these are not
    supported for coverage at the current time (probably will be supported after stable
    release).
  - Adding parsing support for real numbers in statement delays.
  - Fixing case where statement is found to be unsupported in middle of statement tree.
    The entire statement tree is removed from consideration for simulation.
  - Added preliminary support for parsing attributes though the parsing support is not
    complete at this time.
  - Fixing bug with line ordering where case statement lines were not being output
    to reports.
  - Updates to regression suite
  - Development documentation updates.

The way that Covered looks and feels for 0.2 stable release is set in stone now.  Please
make sure that you test this version as much as possible to get any leftover bugs out of
the code.  I only plan on updating documentation and code comments now so stable release
is planned for the next release.

I've got some exciting things in Covered's future in plan after 0.2 stable release,
including FSM support, new text report look, code optimizations, support to be fully
Verilog-2001 compliant, a parallel scoring algorithm, and a new GTK+ interface.
Happy testing!

    * 01/05/2003

Happy New Year!  Release covered-0.2pre1_20030105 made.  This release is primarily a
bug fix release; however, many of the bugs required larger changes than would be
expected before a stable release.  The most significant change being to the lexer which
is now split into a preprocessor and a normal lexer (before these two functions were
combined into one).  As such, this is the first prelease with a second release most
likely expected before stable release.  The following is a list of changes included in
this release.

  - Preprocessor split out from lexer to allow proper handling of defined values within
    code.
  - Added -p option to score command to allow user override of preprocessor intermediate
    output file.
  - Fixed bug where report output was not squelched when -Q global option specified on
    report command line.
  - Modified regression suite to verify CDD file generation (was being performed before),
    module report generation (new) and instance report generation (new) to make sure that
    report output was consistent.
  - Fixed bug where integer, time, real, realtime and memory data types used in expressions
    where considered to be implicitly defined and given 1-bit values.  When these types
    are seen in expressions now, they are ignored by Covered (caused nasty segfault).
  - Fixed bug when a parameterized module is instantiated more than once in a design
    (sent error message to user when this occurred).
  - Fixed bug where a parsed module that was required but not at the head of the module
    list was not being found by the parser.
  - Added internal assertions and code to verify that we never try to overrun arrays
    in the VCD parsing/running stage (caused nasty segmentation fault).
  - Reorganized code for symtable symbol lookup and value assignment.
  - Fixing bug where a parameterized module that was instantiated in a design more than
    once was not getting the correct parameter value(s).
  - Fixed module search algorithm to reparse a Verilog file that contains a module
    that was previously ignored (not needed at the time) but is later found to be
    needed.
  - Created tree.c and tree.h to handle new module search algorithm and to replace
    preprocessor define tree structure.
  - Updated development documentation.
  - Updates to user manual and manpage for new -p option, notes from this release
    and a new section that starts to describe what logic is analyzed by Covered and
    which code is not analyzed.

I've got some fairly large designs being run with this version of Covered and the regression
suite has grown to over 130 diagnostics with more on the way.  Keep the bug reports coming!

    * 12/14/2002

Release covered-20021214 made.  This release is a bug fix release.  See list below
for details.  Bugs that lead to infinite looping in the score command and segmentation
faults should now be cleared up.  Please let me know if there are any other bugs that
need to be addressed before first stable release.  Development documentation updated
to match changes in files.  Regression suite has been updated quite a bit from last
time.  There are now over 125 diagnostics in the regression suite (my goal was to
write about 100 before first stable release).

  - Segmentation fault fixes in report command
  - Parser can now handle all net types (not just wire).  Diagnostics added to regression
    suite to verify their proper handling.
  - Parser updated to handle net declaration assignments (e.g., wire a = b & c;).
    Diagnostics added to verify proper handling.
  - Added human-understandable error messages in parser to help identify file and
    line number along with a quasi-helpful error message description.
  - When parser error is found, Covered exits after parsing phase without continuing
    to write CDD file.
  - Fixed bug where a multi-bit select expression existed in a module that was
    instantiated more than once.  Assertion error fired in this case.
  - Updated regression suite for VCS testing.
  - Fixed bug where parameters were used in modules that were instantiated more than
    once.
  - Fixed bug that dealt with parameters (see param6.1.v for test case).
  - Fixed bug where a delay statement was the last statement in a statement block used
    by Covered.  Added diagnostics to verify correct behavior.
  - Fixed infinite loop problem with db_add_statement function.
  - Fixed infinite loop problem with statement_set_stop function.
  - Fixed bug with parsing order.  When an instance is found for a module that has
    already been parsed, the instance was incorrectly being handled.  Bug replicated
    with instance6.v diagnostic.
  - Fixed output of edge-triggered events to add @(...) around the expression (they
    were easily confused with other code that could exist on the same line).
  - Fixed bug in parser to not allow module to be parsed more than once.
  - Fixed bug that lead to an assertion error (see instance6.1.v for test case).
  - Fixing bug with calculating list and concatenation lengths when MBIT_SEL 
    expressions were included.
  - Changed Covered's handling of -y directories.  Before, all files in these directories
    were fed into the parser to look for missing modules.  Now, when a module is needed,
    the module name is used to find the matching filename in the -y list (basically,
    the -y option works like the -y option in Icarus Verilog and VCS).  This fix really
    streamlined the parsing phase and fixed several bugs.
  - Memory declarations are now properly ignored (produced segmentation fault previously).
  - Fixed report command to display all lines and expressions in order according to
    their line number (the problem is REALLY fixed now).
  - Removed hierarchical references from being scored.

All in all, you should notice a huge improvement in the parsing speed, syntax errors are
reported better, more Verilog syntax should be handled properly, the score command will
run a bit faster than before, and the reports should be a bit easier to read.  Segmentation
faults and assertion errors should become lesser in number (if not gone altogether?).
I am feeling pretty confident that we are getting close to a stable release as I have
been able to generate a CDD file for a chip that is millions of gates in size (CDD file
was created in the range of 30 - 45 seconds!)  Keep the bug reports coming.  I have some
things to work on for next release already.

    * 11/27/2002

Release covered-20021127 made.  This release contains mostly bug fixes to get closer
to first stable release.  In addition, it should be noted that bug fixes to allow
Covered to work on 64-bit architectures have been added.  The various bug fixes
have been listed below.  User documentation, development documentation and regress
suite has been added to and enhanced.

  - Reformatted parser.y code to make it more readable.
  - Fixed bug in parser.y that existed in 20021026 which caused the bison parser
    to either spew an error or warning
  - Fixed bug in expression resizer that caused a segmentation fault for expressions
    with NULL values in right side child expressions
  - Fixed CVS automatic log commenting.  This was causing /* to show up within
    the Log comments.  Resulted in the C compiler spewing warning messages.
  - Fixed code that handles Verilog constructs that are not supported by Covered.
    These caused segmentation faults previously.  Any code not handled by Covered
    should be ignored and cause the statement block to not be examined that contains
    the ignored code.
  - Fixed expression CDD file reader to read short numbers correctly.
  - Fixed compatibility problems between cc and gcc compilers.
  - Fixed problem that resulted in bus errors from the parser.
  - Removing compiler warnings from source and header files.  Code should now compile
    clean when the -Wall option is provided to the compiler.
  - Fixed problem where EXPAND expressions were failing when the multiplier of the
    expander was an expression itself.
  - Fixed problem with combinational logic output in the report command.
  - Fixed bug when parameters are used in expression resizing.
  - Verified that `ifdef cases work appropriately when parts of the `ifdef/`else/`endif
    are commented out (bug found in Icarus Verilog)
  - Added start of FAQ to user manual.
  - Fixed bug in report command for underlining parameters in the reports.
  - Fixed bugs with multi-bit and single-bit handling.
  - Fixed bug with combinational logic being output when it is unmeasurable.
  - Fixed bug in report command when an expression can be counted more than once.  All
    expressions are now only able to be counted and displayed once (removal of redundant
    information).
  - Fixed static expression calculation to yield proper coverage results for expressions
    containing constant values.
  - Verified -T option works correctly for min, typ, and max values.
  - Changed delay specifier to only report a warning if min/typ/max is not specified and
    we have parsed a delay with these specifiers.  Still default to typ.

Keep the bug reports coming.  I really want to get to first stable release as I have figured
out how to handle FSMs and want to start working on a GUI front-end for the report command.

    * 10/26/2002

Release covered-20021026 finally made.  This release is an enormous step toward
getting to first stable release.  Added support for parameters which should be
complete for stable release.  Supports all Verilog-1995 standard parameter code.
This caused some parts of the code to be completely redesigned and in the process
enhanced the efficiency of the score command.  Additional enhancements and bug fixes
are so numerous that I will list them below:

  - Fixed bug in VCD for reading $var definitions containing optional bit selects
  - Fixed bug with calculating initial values of signals for all simulators
  - Fixed bug with coverage results for static values.
  - Modified regression to run with Icarus Verilog or VCS.
  - Full support parameters as specified for Verilog-1995 (Verilog-2000 will be supported
    in the future) -- simple bullet in list but a lot of work involved here.
  - Fixing bug with concatenations specified on the left-hand-side of equations
  - Fixed several other bugs in handling concatenations.
  - Added lots of new diagnostics to regression suite to test parameters and other
    Verilog components which were found to be buggy.
  - Fixed bugs with single and mult-bit signal selects.  Multi-bit select bugs were
    causing internal assertion errors to fire.
  - Expressions changed to be more efficient with memory consumption.
  - Added ability to parse real types in VCD dumpfiles (though real numbers are not
    supported internally) -- VCD dumpfile parsing should be complete now.
  - Fixing -i option in score command to use full Verilog hierarchy rather than just
    the instance name (this was the intended behavior).
  - Added -T option to allow user to select min, typ, or max delay values in
    min:typ:max delay statements.
  - Fixed bug leading to segmentation fault in report command when outputting verbose
    information for large expression trees.
  - Added initial fix for ordering line and combinational logic outputs in verbose
    reports (they were backwards before).
  - Updates to development documentation, user manual, and man page for new features
    and redescribed a few things in user manual for clarification purposes.

Overall, this is a MAJOR release.  Please give this one a try and submit bug reports.
I only have a few more small features to add before first stable release so I want to
really work the problems out of this release.  All Verilog code that Covered will
pay attention to in a design for the Verilog-1995 standard is now in place.  A lot of
work went into this release -- thus the delay in getting the release out.

    * 9/14/2002

Release covered-20020914 made.  This release is mostly a feature release with a few
bug fixes in place.  Code has been added and development documentation started to
handle parameters.  To make Covered as efficient as possible in the score command,
certain unnecessary steps were removed; however, this makes supporting parameters
more complicated to code.  I am narrowing in on the implementation but as of yet
parameter support is not included in this release.  The next release should provide
support for parameters.  I did make some progress on checking off a few of the things
on the TODO list before first stable release.  I have added the initial version of 
combinational logic depth control.  When the -v option was present, all subexpressions 
found to be not fully covered where output for combinational logic.  This type of 
output, though very useful, was somewhat too verbose to gain an understanding of 
initial coverage information.  To remedy the situation, I have removed the -v option 
and added the -d (detail control) option which may take the following parameters:  
s, summary output only; d, detail output (intermediate verbose output); and v, verbose 
output (same as the old -v option).  The information contained in detailed output is 
similar to most commercial coverage tools that I have used.  The -d v option will 
provide that "over the top" information as to exactly what subexpressions where not 
fully covered.  Additionally, bug fixes were made to the -c option to the report command, 
and MULTIPLY, DIVIDE and MOD expressions should now be output in detailed and verbose 
reports.  Fixed bug with initial value of signals that was causing Covered to report 
incorrect coverage results for signals that were not initialized and not toggled during 
simulation.  Updated regression test suite for all changes mentioned above and updated 
user, manpage and development documentation.

    * 8/22/2002

Release covered-20020822 finally made.  Took some time off away from the project to get
some other chores done and get refreshed.  This release contains mostly bug fixes that I
have found while testing the tool on some "real" logic.  The CDD database merging (used
in the merge and report commands) was rewritten for optimization purposes and to remove
a hard-to-pin-down segmentation fault.  As a result, merging CDD files and generating
reports should be a bit faster and the bizarre bug should be eliminated.  Fixed some
bugs in Verilog parser to generate user error/warning messages instead of core dumping.
Also added -c option to report command that allows the user (and maintainer) to generate
a report that shows what code is covered (instead of the default behavior to show what is
uncovered).  This is useful for debugging and understanding exactly what the tool is
capable of measuring.  Removed Bison generated VCD parser and replaced it with an optimized,
hand-written VCD parser.  This should make reading in the VCD file much faster and should
totally eliminate any problems in reading in these files.  Added manpage as an additional 
documentation source and updated Makefiles to install this manpage.  Updated user
documentation and development documentation.

    * 7/21/2002

Release covered-20020721 made.  Lots of bug fixes and feature enhancements.  Fixed output
to a more understandable format when modules cannot be found during parsing.  Added support
for the -e option which allows the user to omit modules from coverage.  Fixed single and
multi-bit selectors.  These should work properly now, selecting the correct values from
vectors.  Added -D option to allow the user define values at the command-line.  Fixed
problems associated with the `ifdef/`ifndef directives.  Fixed problem with module trees
that were 3 or more modules deep.  Created TODO list for items that I want to complete
before 0.1 stable release.  This will give users/developers an insight to the short-term
goals of the project.  All items in TODO list preceded by an X have also been worked on
in this release.  Improved performance of signal/expression binding.  Support has been
added to allow implicit wire declarations.  Added ability to parse the design and score
the dumpfile in two calls to the score command.  This could aid performance later as a
design would only need to be parsed once.  More diagnostics have been added to the
Verilog test suite.  Development and user documentation has been updated to bring them
up-to-date with current functionality.

    * 7/15/2002

Release covered-20020715 made.  Several bug fixes for problems found in previous release
and additional Verilog constructs are now supported.  The `ifdef, `else, and `endif
directives are now supported.  VCD scoping problems have been dealt with.  It should be
possible now to get coverage results on an entire tree of Verilog instances.  It should
also be possible to provide a dumpfile that contains more information than is necessary
for getting coverage.  Some performance improvements have been made that will be noticeable
for larger designs.  Fixed bugs for always statements that did not contain any coverage-able
code.  Support is now in place for concatenation and replication in operations.  The
binding phase has been revamped to provide better performance, easier maintenance and
less memory consumption.  New diagnostics have been added to start testing new code support.
Full regression passes.

    * 7/11/2002

Release covered-20020711 made.  This release contains a lot of fixes to the score and report
commands.  Proper support for `include and `define preprocessor now available.  Fixes to the
-y, -I, and -f options to score command.  These now seem to working correctly.  Added -D and
-Q options to covered (for score, merge and report commands) for adjusting amount of output
to the screen.  The -D option causes debug information to be spewed to standard output for
debugging tool problems (not recommended for standard usage).  The -Q option will omit all
output to standard output (stderr is still displayed).  By default, the minimal amount of output
is displayed to show tool progress.  Added proper support for default case, casex and casez
statements.  Fixed a lot of problems in the report command output, including reformatting the
toggle information to help make this more readable.  Lots of bug fixes and support enhancements
make upgrading to this version worthwhile.

    * 7/6/2002

Second release of Covered (covered-20020706) made.  Proper support for case, casex and casez
now exists and has been tested to an extent.  Fixed problem with reading VCD files appropriately.
Support for multi-bit anyedge (i.e., always @(b) ...) is now installed.  Lots of other bugs
in the first release have been fixed.  I have noticed a small performance degradation by changing
the VCD reader and am looking into it.  All in all, this release fixes many bugs and enhances
support for case statements and always blocks.

    * 7/3/2002

Finally release first unstable version of Covered in tarball format. This version should 
be considered alpha at this point but may be considered ready for good testing. Please 
read the release note that accompanies the pointer to the download for information on what 
type of code is currently supported for testing purposes. Happy bug finding!

    * 6/19/2002

Added beginnings of development on-line documentation. At the moment, this documentation 
mostly lays out the ground-work for interested developers. Lots of details are missing at 
the moment; though, the generated documentation contains a lot of source-code-specific 
information. With initial documentation out of the way, for the most part, the first 
release should be right around the corner.

    * 5/1/2002

Added user on-line manual. The download still isn't available for use; however, it may be 
interesting to see how the tool will be used. By the way, the download should be available 
soon for first release. All of the features may not be present but it should be somewhat 
usable.

    * 4/12/2002

Created a home for the Covered utility on SourceForge.net. Currently, the HTML website is 
only available for viewing. No downloads are yet available. There are a few features that 
need to be added to the tool (and verification of those and other parts) before the source 
files and tool become available for public use. Check out the ToDo page for items that are 
on my todo list before making the tool available on-line!

    * 11/27/2001

Started working on the Covered utility. After searching long and hard for a free, open 
source code coverage utility and coming up empty, decided to start working on one. This 
utility will be available on the gEDA website and database.
